%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.04
%%Creator: \050MATLAB, The Mathworks, Inc. Version 8.4.0.150421 \\(R2014b\\). Operating System: Windows 8)
%%Title: C:/Users/Yonatan/AppData/Local/Temp/tp2662ced1_5d7b_4027_9c67_d93af108850c.eps
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 457 245
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.04 0
%%Copyright: Copyright 1996-2014 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /pdfDuplex exch def
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      pdfDuplex { /Duplex true def } if
    currentdict end setpagedevice
  } if
  /pdfPageW 0 def
  /pdfPageH 0 def
} def
/pdfSetupPaper {
  2 copy pdfPageH ne exch pdfPageW ne or {
    /pdfPageH exch def
    /pdfPageW exch def
    /setpagedevice where {
      pop 3 dict begin
        /PageSize [pdfPageW pdfPageH] def
        pdfDuplex { /Duplex true def } if
        /ImagingBBox null def
      currentdict end setpagedevice
    } if
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr {
  4 2 roll exch 5 index div exch 4 index div moveto
  exch 3 index div dup 0 rlineto
  exch 2 index div 0 exch rlineto
  neg 0 rlineto
  closepath
} def
/pdfImClip { gsave clip } def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font OLCQRF+Helvetica
%!FontType1-1.0: OLCQRF+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2006 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2006 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans Regular) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /OLCQRF+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-8 -218 667 729] readonly def
/StrokeWidth 0 def
/UniqueID 5082796 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 68 /D put
dup 73 /I put
dup 74 /J put
dup 89 /Y put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3D11905C430BBBE32A234BC855927B6AC92F6BD885940478A650CE43
0A8FE98A90BEA5AA06AE0608CB4FDDCE8C422BCF936E8D053F2EFA23B26749FB
45CF4B11EEC16C2E77C77B7EFB2650A2E38CF67E41DFA8DF6B9F14773494A28C
024E11B9DACBB72016C39205C4141FB6DA229034C63CAD755A6F6D58611E4DFA
B047DB92FFFCF7FBE0DC0AB39C142E9C0DC35889433AD20A453664DE7CEE84F9
7DB09169A9A0F484A4A7369564C11347D171C04E11CB9DCAC343C9F72592A400
FB7ACD2908EA85E741416402BA31E5EFEC3F1FC2076D4C68298286FA105A1570
2D7F5F600E31A10EF9CCA04BB71D7CB6EF4EB9B1A20B89BB3314DCA241041A73
7878DFBF24F1EAE77EA240F87CB3F33728CF9A4C96693942666381810DDA0922
23D173FFAB84C6626751D0AE63A777D4B50DD4FDAE2029C38920ED86423CD85F
8093044055B38C56D849B03E3AD3DB90F3E93022B01BBD0499231594ECD39521
D200A98B1ADE38613D76422A5B28FE4D8F7FBD9A3B7C55C31ACB779F1D152C66
B777DC721C8CBEDD608CD4FB107FAB1D791A3EE73B4EEBCE8950FD916EF73266
7F3975A7DA7ADE55A76513F68E7130389BE9400F4D46F5B8C086C164F27DD41C
4256244B34C93FD73A6DFE08FE581BA70F3F860B778E4CB49CD311D392A016D7
BBE3F73BC01B055C483DE011E9C24DFA95406AD2AA1DA4F85714C648FCC926EE
C8EC7FE4C8A6C21128E21B2B2B01A6133B8F022011EE2F3968A1F3FF9308BC90
90206419323B83FB1AD5096EE2E60945F44930496A1029F9F8E2E08E5D4833B9
6122A948A2DFCE4993CBF1135EC250BE7C9EED09274DCE46B2E217770F302172
2E22AC4D8AB64F59B5BC7209EEB1AF3FC4F64DA4A4CFDD7D7D125475C406666A
3C01C0FAEA8B20C75B3BB4FF565ADD30D886A3A4442273F543DB762FC5EE5BF5
8892DD8EA2578F2A780A803206A984EA43A2575AA059800B84C41FDED7D58DF7
9D3AB955721D4C643CBC589E967C7A8EBBBC520AE550EEE00AA0E65CAB752438
F22B6D6094842DE7B4392972F60F817F556D812C011E2E484A41B1F9BA57DBAB
E024870ABA27219DD5E7369C37F11904FE65811B758FAE325C862468414442CD
EEF825CC5574B0E0AD044E48A79FB10F19853B5FF1A613B8C9E410EC02894EDE
C0AA50F7ED3495C165D71DB905DD2D09443E6902A629C8B0683A239925262FC9
474D6D9A110097124D6674B8D086B4B363EA7C43A74B074A3296C77F6B650A8E
BB3A960920DAD5519652472574BD3B65CA1E5AF0DD14EAAD16BEA72BDCAEAFDF
8EB725B8341B73D7E9E4CEF663B978E26A6A556878F702BE127599A3CBB8FA3B
B6D83714489AC82F16D9418DC4A9C7A04C4D8CE002AF66DBABBB2C5CE6B911B9
8FF52AE38CC40AB6992C48A3BB25D34B9B6BAB5F993241E1B9840DF59772EAB1
C4E3D374450ACB9930A330C333899E534EA42D82FF4B55FB78C6B7F49C8BB817
9FA4F43C9899770FE43ED6267666C3971CAD7CD6D1A0CFBD2CDE7863824B7B51
4CF0F7725043F664EEB65F8A0A8E851DCDBA9AE44BC5DA269C542CA43902097F
769A5DB1433E86C8CCAF32C9DC6EC1A4CDD3F547324035A886305B2D2F46E89D
1DACD6DDC59EC9B4822EB8C1170FE974DEF796B79C459A3185FAAD5FA0A361F7
D61F1E25549E7DF438409117915EC9C88B39B5BD488EFA6A7BE76ACEA3DBF57F
8C09500A04CC2C4EE96A540AF230CB85B23133708B07692A47686D9C4327D670
B177FAF9412DFDB2F01341DD2A48D0385B8AA39A7E259854B58BB901DA4CCB0A
A331670D3B67C493098D2FE738ED2CFE5D12A4E70A19F46119455140691343E1
C7F66E405184D9D335DCA2BF3E977788EDB2C736616E295D632B5AD57D93C1F8
3F4F47380708A5D490FED35C1306CCAE773F548A5518956B172E1074E3E396A3
2EE4AD4E42F0080C28BC861F4FE588E5517A02D411F37E5177F48284E55873BA
8B9656F6711193553B5BB2F8B4BA3C486053412E105CA67F9D7266714A5CF75E
62B8B8993254C771663877EC1579017F353D0BC6D2382AF027A4B9829F44DF29
8846B00C70E73A21F3E601FC1365EF1E13E3B8DD52EDFF889F6D8DEC20A3AF91
660F2D70DEC60202266EB04DD9AA6603D1F8F5A809930C64CF0EA7C248584838
041C12A825B2F6001A53D823CCCF9D1024B4115C77407F38563141C2C75BB627
EE968A864E504B33FC87E3569C92710E907612679C135D1A613D9817E4FDD5A5
8C7C2FC01B16A7F902FA35ECC0322A43202762CEE680F2E4865BED9AEF1A6DC3
7706FAE78E07DE10C9F785F8960DEFF8A6B14BCE737AF4A1E5953B73B13C77C1
95A6D54EF617B94F6A3F397BE9CD74E26023A3B40F14950C52A9F9A82B9BD01C
1DD11A2CF5AA634F482839D6E39873C551F66C07A0C61695481C06F1EB75124B
B599581699512CEF8EECD45E64FA58C84F520587A91F919F54869B6307FC10E0
64C5E344328A7014E0843F60C78E1BB44057FD16C1D0A43EE8D3D4C4DEC4587A
398364966DEAD621C6854C2AAA842395E6016C94C4EFFECB560F0E7FAD320EDB
D323D80007E6281AD0538DBBD5D8CE15F754A36CC8C713F789C4EBF64C114010
A492F5F4F82971BB7DE48CCFA86B7934A2FC1F433BA4374D5CB2EB436135792C
25164D32B9F1E67301EAEBDD6E0378E82E1D3D9966B739A6E2EBCB9FF1825304
E6BCA379DE8A62E61988FA7F2FC72C2646A8ABF2E15F5877321D6971CFCFD753
8AF403D1C610615E2801BE7B723AA0538EA84AF2FB3028CEF885CDB8BA92D1D1
C8A8F301D8730FCBCA19F8BD4D93C9B543CBF7A1296D78BD04ED85F67F3A93ED
1627E909C9A8F26AA63D6424993C9B35FAB7F8367227EB99A081B865C4ED9206
1FA9516BCB8221D073F1A9D76284CDB05086EBC1EB396001A8CC6A9AA6BCC7FB
805156E6BDB35E1B2E0D3D2AC29F79F63119BDA72F5CCAA16C4A1C96F627BC61
F9B325FA6960DDA3D270653A6B568420914048DCBC94C4BE702BFFB5EFEAFF93
47DBCD9D1FC702459316CF693ED4075E5D74E5C5488531EB206E8A268A3CC9A6
A96251C2E7B08750B5CE1CC31404D20632929612298F72CEEE990A47624D6DF1
5FE84696F1B2168077D8D0F5B322D4F9DF78323CC719DFE4E196989B036B516B
4EB5B292CB2287EFA92C6E0E8E34AF2105C98555DB8DDD05E4DEAC7B6879C884
4AD0D2AD103D4B4379D222C15081126CEC007284C292127C32F28E26F6950F8E
D0DD0E6A661635674FBC6B3551961794381D7A265B37C8F75FBCE27AF11DE365
BA5F4DA2D0F7984135467AE36B4F63107A37D5A462278727667479462D47B204
CB2119337908B7CEF54F7580535EBB6930FA4C8AD3CE83CC076FC34B4AFE7E3B
FEF409AC79F00FD30776DC71D0B9DBE4154D397E2CF620B221A163CD1F10B892
6383D663C9323EFC693BC626CEBA6950AE025D467E1208B922B66B3DF4A1B110
5F9D3C8026780C45A0694C4E67A5A3B924312C8F726DCF60B8BBA4358A5B09F5
5C5D5FB322D84443B42F2C5382D83BE3A55D045E8E99EF0C3A1DD91FDD20C122
297A53A73039AD6DCE75F8102F6B0D3FF0AFEA868607970BC512FAB20F5FE7F7
0FF751D7250FE238140BF37E367D5CC59B512ED5A315C4C4AFFD71A0B97B4079
9D985B785123B7E96D438FE6BD8914A4E62E5E75E163E5DF1D0F7046E0B041BD
3843E51948B970327C6762191EC5804F3243E2EE0FF4A74454E58E450A8D7379
AF67B21EAC0A55A4D29E1CEC4346E348102F820D5BFEAE6BBB2941CC8E6F036A
E3C4DDA75BAB6648A42E66828938492FC7115B512DCE357F02D9FDC057DC6212
096C6F480778038808D96EDFDA38788814025F59E6366499EC3C88C786DF81A4
7CCCC471C2F3A065177AA7B2F8B658A998C5117C3AA01837E4B8E3E4CAF88080
92CC8AED383E780A65E84F743DE7CA51641CE2DB3E8411A4A222CD7A94B8D003
046E84F2D17CE1380577C01527248F52E1824C2B2E09B53D4A173F07F360C9E4
01EEC0DDD22A8E51EB325C18B0C01E580BEFF00E7C5048DB299AD698546CA408
1CEDF249B8F7CF2750C62ABB4741D2A318EF8E0F2084C4998B8E9CF8AF068342
8CABA473516F20FF1D45F5FCB52872F1A2708C797D455A4F0B4E28E3361BE6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /OLCQRF+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
end
%%EndSetup
xpdf begin
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 457 245 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 5065 2587.5 re
f
0 0 5065 2587.5 re
f
430 307.5 4132.5 2085 re
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 237.743 2.92578] Tm
0 0 Td
/F8_0 11.25 Tf
(Year)
[7.50375
0
6.255
0
6.255
0
3.74625
0] Tj
Q
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
430 307.5 m
4562.5 307.5 l
S
716.41 307.5 m
716.41 348.824 l
S
1125.57 307.5 m
1125.57 348.824 l
S
1534.73 307.5 m
1534.73 348.824 l
S
1943.88 307.5 m
1943.88 348.824 l
S
2353.05 307.5 m
2353.05 348.824 l
S
2762.2 307.5 m
2762.2 348.824 l
S
3171.36 307.5 m
3171.36 348.824 l
S
3580.52 307.5 m
3580.52 348.824 l
S
3989.68 307.5 m
3989.68 348.824 l
S
4398.84 307.5 m
4398.84 348.824 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 60.7961 16.9477] Tm
0 0 Td
/F8_0 9.75 Tf
(1920)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-1972.52 TJm
(1930)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-1972.47 TJm
(1940)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-1972.52 TJm
(1950)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-1972.47 TJm
(1960)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-1972.51 TJm
(1970)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-1972.47 TJm
(1980)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-1972.51 TJm
(1990)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-1972.47 TJm
(2000)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-1972.52 TJm
(2010)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
[0 1 -1 0 14.5 59.25] Tm
0 0 Td
/F8_0 11.25 Tf
(DJIA annual volatility \(year)
[8.1225
0
5.625
0
3.1275
0
7.50375
0
3.1275
0
6.255
0
6.255
0
6.255
0
6.255
0
6.255
0
2.4975
0
3.1275
0
5.625
0
6.255
0
2.4975
0
6.255
0
3.1275
0
2.4975
0
2.4975
0
2.4975
0
3.1275
0
5.625
0
3.1275
0
3.74625
0
5.625
0
6.255
0
6.255
0
3.74625
0] Tj
133.5 5.25 Td
/F8_0 8.25 Tf
(-1/2)
[2.74725
0
4.587
0
2.2935
0
4.587
0] Tj
147.75 0 Td
/F8_0 11.25 Tf
(\))
[3.74625
0] Tj
Q
430 307.5 m
430 2392.5 l
S
430 307.5 m
471.324 307.5 l
S
430 516 m
471.324 516 l
S
430 724.5 m
471.324 724.5 l
S
430 933 m
471.324 933 l
S
430 1141.5 m
471.324 1141.5 l
S
430 1350 m
471.324 1350 l
S
430 1558.5 m
471.324 1558.5 l
S
430 1767 m
471.324 1767 l
S
430 1975.5 m
471.324 1975.5 l
S
430 2184 m
471.324 2184 l
S
430 2392.5 m
471.324 2392.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 20.0234 26.7047] Tm
0 0 Td
/F8_0 9.75 Tf
(0.05)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
5.42227 20.8496 Td
(0.1)
[5.421
0
2.7105
0
5.421
0] Tj
0 41.7 Td
(0.15)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
5.42227 62.55 Td
(0.2)
[5.421
0
2.7105
0
5.421
0] Tj
0 83.4 Td
(0.25)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
5.42227 104.25 Td
(0.3)
[5.421
0
2.7105
0
5.421
0] Tj
0 125.1 Td
(0.35)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
5.42227 145.95 Td
(0.4)
[5.421
0
2.7105
0
5.421
0] Tj
0 166.8 Td
(0.45)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
5.42227 187.65 Td
(0.5)
[5.421
0
2.7105
0
5.421
0] Tj
0 208.5 Td
(0.55)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
Q
30 w
/DeviceRGB {} CS
[0 0.447 0.7402] SC
430 645.547 m
470.914 638.453 l
511.832 959.398 l
552.746 879 l
593.664 1051.71 l
634.578 724.523 l
675.496 944.438 l
716.41 984.465 l
757.328 757.719 l
798.242 667.711 l
839.156 690.098 l
880.074 628.094 l
920.988 708.113 l
961.906 770.02 l
1002.82 605.641 l
1043.74 847.262 l
1084.65 1724.05 l
1125.57 1311.04 l
1166.48 1889.93 l
1207.4 2312.65 l
1248.32 1842.01 l
1289.23 995.086 l
1330.15 720.906 l
1371.06 720.391 l
1411.98 1243.36 l
1452.89 1238.03 l
1493.82 941.012 l
1534.73 898.809 l
1575.64 626.934 l
1616.56 598.891 l
1657.47 523.816 l
1698.39 396.668 l
1739.3 522.113 l
1780.23 869.309 l
1821.14 574.996 l
1862.06 597.148 l
1902.97 478.605 l
1943.88 661.082 l
1984.8 514.352 l
2025.71 403.086 l
2066.64 456.188 l
2107.55 463.238 l
2148.47 660.824 l
2189.38 545.961 l
2230.3 627.375 l
2271.21 481.176 l
2312.13 501.938 l
2353.05 565.059 l
2393.96 475.809 l
2434.88 762.383 l
2475.79 487.762 l
2516.71 350.34 l
2557.62 415.273 l
2598.54 593.324 l
2639.46 487.852 l
2680.37 471.051 l
2721.29 539.016 l
2762.2 746.414 l
2803.12 559.082 l
2844.03 486.699 l
2884.95 835.109 l
2925.86 1048.46 l
2966.79 796.695 l
3007.7 618.18 l
3048.62 535.551 l
3089.53 690.164 l
3130.44 586.973 l
3171.36 753.953 l
3212.27 662.699 l
3253.2 877.484 l
3294.11 677.211 l
3335.03 679.898 l
3375.94 528.383 l
3416.86 744.137 l
3457.77 1629.71 l
3498.68 845.227 l
3539.61 699.254 l
3580.52 777.426 l
3621.44 708.293 l
3662.35 531.375 l
3703.27 461.574 l
3744.18 554.543 l
3785.1 463.352 l
3826.02 598.996 l
3866.93 884.805 l
3907.85 927.832 l
3948.76 771.512 l
3989.68 965.438 l
4030.59 985.637 l
4071.51 1203.65 l
4112.43 777.758 l
4153.34 551.324 l
4194.26 534.008 l
4235.17 509.887 l
4276.09 709.629 l
4317 1685.96 l
4357.92 1102.44 l
4398.84 771.18 l
4439.75 977.574 l
4480.67 594.18 l
4521.59 513.832 l
4562.5 552.898 l
4562.91 554.836 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
end
%%Trailer
%%DocumentSuppliedResources:
%%+ font OLCQRF+Helvetica
%%EOF
