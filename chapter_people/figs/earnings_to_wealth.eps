%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.04
%%Creator: \050MATLAB, The Mathworks, Inc. Version 8.4.0.150421 \\(R2014b\\). Operating System: Windows 8)
%%Title: C:/Users/Yonatan/AppData/Local/Temp/tp0432ce90_205e_46f9_ad71_f91a26d17a1c.eps
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 468 245
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.04 0
%%Copyright: Copyright 1996-2014 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /pdfDuplex exch def
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      pdfDuplex { /Duplex true def } if
    currentdict end setpagedevice
  } if
  /pdfPageW 0 def
  /pdfPageH 0 def
} def
/pdfSetupPaper {
  2 copy pdfPageH ne exch pdfPageW ne or {
    /pdfPageH exch def
    /pdfPageW exch def
    /setpagedevice where {
      pop 3 dict begin
        /PageSize [pdfPageW pdfPageH] def
        pdfDuplex { /Duplex true def } if
        /ImagingBBox null def
      currentdict end setpagedevice
    } if
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr {
  4 2 roll exch 5 index div exch 4 index div moveto
  exch 3 index div dup 0 rlineto
  exch 2 index div 0 exch rlineto
  neg 0 rlineto
  closepath
} def
/pdfImClip { gsave clip } def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font SGJTKY+Helvetica
%!FontType1-1.0: SGJTKY+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2006 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2006 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans Regular) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /SGJTKY+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 708 729] readonly def
/StrokeWidth 0 def
/UniqueID 5082796 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 69 /E put
dup 89 /Y put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3C6B88B59A58E4CB2ACF74C330000AE47A6B584F6A311B1894604AE9
F9621B41EB06E94E5228610EC3DC8B10714E5AD5EDAF6602C376BFB27C1B4C1A
0FEAEF730A34E7E18E535E70819318F2CD985A511B3E3311C2B8575FC953BD37
66AFAA5BF486CC00925509836A49A30B242CAE35F0B8A85D1E60C03FEB58D306
17AA66D34881A282148309C35F869B9228EF9714B4226DBA2FA6CCE76CBB7E65
F69401F23A7ABE7E4012B0F0A3604CCEE41057920B289668692DC97B1CA4C67B
D695BF98667A785D29E16F5D0AF1232B86DA7B6A61B4727A9DB395D25635B9C7
BDAEE8C4844ABDB859BE0E52B6902A08ABD082841085C9842DE4A53BDC1D6406
65154CFCDC3D39EEA41D9AF832F8CEB3AF1E1480AA361BD1340DC76EB949A76D
06E63FFDA503083173910ECC7C84DCB7425A8E429F5153E73F402B11C5AA0EC8
258A8D35A1122079D666174FBC417F8F7BF8BF2BB003E48094FA0C73EEBED0A1
B4E84F6189B2A17802AF60D5E0192474CC0527A14747145C9D62A6F575CA4FB3
9DE2B08D48D8D833AE6016E263A2E23BEAA49E0C799713B824B6A9624D70D32D
25E2FEA3F0A7A9FDEC699150E7FBE6EDDFEAEC650B124D1D3B59EE81A1901208
99D8B1A6F587D3CEC489D3D62111DDE778DABC0F58AE5B53DF72F2BCAA9029FA
7B8A4526BDFB10144D9691CE29A55637BF41C2A5BCEFB805CC03EE9ECF4E070F
2ECE048BD6E512EAB89A50273C7E14C1A1DA6D0D2128890D04EAF4F0E5448E4A
38E5756BB265015DA4647DA76540963E5330C43A0B163AAC227580ABF551AF3D
66D426925D39159F2691B050874F2B085488E78573BA1542110370482BACBF42
C3C15857A9BEFD8750F861EFBA852DEBA09B469CF3FEB1ABC1990C19843806B3
2FF76E2C51FB3FD0AE67496FC4322BE7616473D19449EEE5227E621FB16E6AEE
25BD96D2FD7347A3EC1EEFD4C8B36BA3DDD48E088EA15F7B701BBAE835F2FC04
F7B9D2CFA03EEAAD12210F73B13E131AA6E450F1B74EAB7D044911AA74E898F6
623CDDE57C2021D0A48BF6D116C197E33740DCB7CC59874565474A27F3128DDF
5243D42D8E8E3623503AAD453A428847B7C88C1DC69D84C69BB865B3E95B8D37
2DBEE06064ADB6D33836B1960E572D608090488B517FF38DBAECD748BF772ADA
BA6BC765B8831D507266F3EBBBBFC446CF15AC60AFF35D57223C61073DEF2B48
3936E37F0A84BDE69215F64452A499F87A3E67AB3042C814A114013935F7DBE8
3F629C7B4E581C7E51277A77701ACC61D0EA3446BD4DF865F560623F4933D402
1406CD422943FF2F934A13A0CAEA8E95CA7B089AD21B80BCF4D3A923E0411D06
0B5EF533DCC95941D98958111F012C0C7CBF89829B793513FAE8319CB0DE357A
B97CB0DB344CAFC651A7ECE0DADCE7DC28871336DEC1EEBA6E00BA70CA823EAE
22F99DFFDD53FF0F7237BE360125FA65174A1CD2196E2B596F391C16DC9E7A59
AC5F2A59E9FB4B62E9175D576A3A3372EEBEA0E773A1E87432AD6A971C605331
B7F7C33458C525BEB06CC9522C026C3DF1FCCC6F3545E3FF85BD734DA2F7BBAF
7AEA3720C20C82778C1B2F219B93D0CA2D8420CD16C562BE3DE9D8F308AB2F3C
3DB84971B85D4AD47AECD4600AFFBDE1EDB1473B328330009EC552186F0EBB15
7931198E7F82788176810ABBC9D0B8AF4B49A4556CB9272C546E2BFF9A30E11B
4B55F970AF386EAB00DCB82377EABED6FA237FB3B74E84D8290CC1D2BD8CBE38
23340C6F8A279D644425D01D395C97A4DDA56100298771BEC8BA5D48C36B850F
7C6841C3592F08308FDA1FC5EFFE32152F1EE7C90CA8D948FB1BB0C8A40BCBD1
0CB3D25B3184452C55460E7EEC378FF165D4E3DF6ABB2967E1D57F3BD003680E
DB8A2ADA170F3FAB1CE51E7F0D362082D210432C3B0BC4ADDDA8400084FBACC8
3F369C7AA16E0B9BE7E850C268DD7F1EE6A679B8B31D13C57717AD43A36303C1
DE4C8ED4855FC6D367C311335C1D376503A50B59434E2A4AA5F766AC66FC0C13
5365B7B8A56EB929CBED8310F0619E0E3C628202E5BE87F9115D0EE317F7EBC1
6F175BACD633527EE1E6EE92AEC491C8BF24C0ABF7DD3C54DF795E51D5EC5453
2C7C0A59124534DB3EA889675637232576BB8CFE8682CA67901AE90C2824387E
5396844E536A9FFEA5D4DDFFC8AE52EDCD4772AC74454530AA2B12C2BC0EAB54
49C07835B216F4D3F5446AA1F57D4788B02AF5A7E216ABDCE23F014DC3C09EE8
35358B6E4A1CE4519E37DB5570C6748B87C6641A605246F9B24D5FEE5260A9CB
75AA70B81CC053197120736E8C50591DFD043BC9BC07435E95C00A256844F196
E7391D2A9169D3A46D974449204053FBBA3817723A808B3D06E1BFB81A95E960
77D95BB701B1B01C6F5CC22900524A9B7B3455C39C71170980103B70E40AEB6C
3FF8BE68F272504BD40B11076E2B285AEE3A67CC0E947B789328AEFE98E55D4F
2E86D31DC06FB32A382938E2A37EBB4F0A7CEBC8735882CFA44BEB3FF6617B1C
9EC03F182CE30AAB8AE333CBFF59C733C836E3BFAE31B78DEA241CD7A6C7DB02
C85ED08FDF766179CA32D2831595AFB96C51E5857351690BC9092FD5E69DBBFA
56C0C638E3B3EE684322321D83694B02C7CD6409A5A9F92E7907B3077FF20F9C
809EAE7B8743D3438C5F745D397C1E2EE64733D6DA9BBECBBB7A60B00221D913
D433EDEAC8CA1449FDC77477DB77AC18D6B1A903F779A5543E19BA5F39A41D67
0F00C522A6A7DA24145E0667ADC0DEDB8CEFF31F6F283818EEDDC1D704538623
62C0B2A65707978068A8DFC96EA88928CEDFF17F44DD01DF5C62E81127D85A75
BE1ACBCC97E7D8A637AEA18600643CEA9EC6468CB962DCB5F10F9FC95A1D9781
B0F62C4668EF01D777ECCBF2736F5BA52FB3DC174DBB64B574C2C557034F29BC
69156F655E6DEBA5EA1176EFB0F78E0E44944348DB6156735C79ED73F3AD3D6D
0714EA1EE801E8E05CDE77F2645845C8250AE6540B82F64B6139EF6B910EE9CD
532E019A75DBBE1D73664F20371C85900EAA823215ADFB4DAD63118A7FFB3AD8
A388020EFB3E3B8FD2446A69B75AB50B9C509DC710DC787B4CD957FD88E04FE4
CF50A336BC0B5D4C07E3E8A40C1B884CABA66FD9856A84798D4A4234A355825C
3CE137B7DFF7C99B451530B7AE618A630679ED31A5CAC60F53EEEACED4C5DBB0
1602B9AA36841CF981B8D7EF4DDF2436700B00BC340F48F91E0D77332B6155CE
588F87E9BDAA0A76D32D44E250C7B303F6E6E7D2E7BD300D5DF1E1DE92AEBE7D
C0764CAF27154BB33AABECC2B45D976F6370BC4BEA84D5ECB6579B61239F26E5
CE3D8EF46BC0FCB1827FC33AF0582504CEE57B4F433F816B822575C32B9B6D4F
8E06CCC3D9E09AEFFE44246C6CCF6C809201F41AA01922779377F82AFC1924B6
FB2E178366CD00B38C6848EAE2E55DB4C9F455D66C9D34C9205497B315BBB4FF
C01F60F5C238B8C87F435BA121BB37F0F30ACAE35DAE9EC9C6F2D566C7B387BC
EC5D8BD14A2AD6D5EE405BDBBE1B2C625C3F92E4443C3BFC5960A7C79F887930
124A22587004342CD4D97823FB2B8FF3FAE730A8AD5E9DC35CD517769BEF81DA
A404AD2D37AFAE452766CB43BE4B1B0986633645720CB4023E8608EC2118090D
9EEC1B8D7F261F2B4DEBA053B4AA7E76AF42289A1DE35C3A1161504A408045EB
877537A56B54E6C7014252CA56B258F3CC7CC65A7F91CC0FE94A6CA6F76CEC63
C420BE09A5A594B0F9EFFD75D9D727A5EA01F44DB098BF75EBE3E3AC294722A1
19CD279031F590288A1741EF23D94DD2697123FF72D7F17320AC6EA50E6A4339
4982AA55E00E0E9760738237DD2E66860567287775507A5EB6B497B9DB2A7FF4
159062133E319D27B0BD12B0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /SGJTKY+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
end
%%EndSetup
xpdf begin
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 468 245 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 5075 2587.5 re
f
0 0 5075 2587.5 re
f
440 307.5 4132.5 2085 re
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 238.743 2.92578] Tm
0 0 Td
/F8_0 11.25 Tf
(Year)
[7.50375
0
6.255
0
6.255
0
3.74625
0] Tj
Q
7.5 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
440 307.5 m
4572.5 307.5 l
S
440 307.5 m
440 348.824 l
S
956.563 307.5 m
956.563 348.824 l
S
1473.13 307.5 m
1473.13 348.824 l
S
1989.69 307.5 m
1989.69 348.824 l
S
2506.25 307.5 m
2506.25 348.824 l
S
3022.81 307.5 m
3022.81 348.824 l
S
3539.38 307.5 m
3539.38 348.824 l
S
4055.94 307.5 m
4055.94 348.824 l
S
4572.5 307.5 m
4572.5 348.824 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 33.1551 16.9477] Tm
0 0 Td
/F8_0 9.75 Tf
(1930)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-3074.08 TJm
(1940)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-3074.08 TJm
(1950)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-3074.08 TJm
(1960)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-3074.08 TJm
(1970)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-3074.08 TJm
(1980)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-3074.08 TJm
(1990)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-3074.08 TJm
(2000)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
-3074.08 TJm
(2010)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
[0 1 -1 0 11.9367 75.5969] Tm
0 0 Td
/F8_0 11.25 Tf
(Earnings-to-wealth ratio)
[7.50375
0
6.255
0
3.74625
0
6.255
0
2.4975
0
6.255
0
6.255
0
5.625
0
3.74625
0
3.1275
0
6.255
0
3.74625
0
8.1225
0
6.255
0
6.255
0
2.4975
0
3.1275
0
6.255
0
3.1275
0
3.74625
0
6.255
0
3.1275
0
2.4975
0
6.255
0] Tj
Q
440 307.5 m
440 2392.5 l
S
440 307.5 m
481.324 307.5 l
S
440 605.355 m
481.324 605.355 l
S
440 903.219 m
481.324 903.219 l
S
440 1201.07 m
481.324 1201.07 l
S
440 1498.93 m
481.324 1498.93 l
S
440 1796.78 m
481.324 1796.78 l
S
440 2094.64 m
481.324 2094.64 l
S
440 2392.5 m
481.324 2392.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 17.777 26.7047] Tm
0 0 Td
/F8_0 9.75 Tf
(-0.01)
[3.24675
0
5.421
0
2.7105
0
5.421
0
5.421
0] Tj
16.8008 29.7855 Td
(0)
[5.421
0] Tj
3.2469 59.571 Td
(0.01)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
3.2469 89.3569 Td
(0.02)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
3.2469 119.1424 Td
(0.03)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
3.2469 148.9283 Td
(0.04)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
3.2469 178.7138 Td
(0.05)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
3.2469 208.4997 Td
(0.06)
[5.421
0
2.7105
0
5.421
0
5.421
0] Tj
Q
30 w
/DeviceRGB {} CS
[0 0.447 0.7402] SC
439.586 752.137 m
440 752.102 l
491.652 761.438 l
543.313 539.055 l
594.965 510.414 l
646.625 630.016 l
698.285 764.086 l
749.938 844.875 l
801.59 851.469 l
853.25 660.164 l
904.91 779.281 l
956.563 836.762 l
1008.21 1221.7 l
1059.88 2060.45 l
1111.54 2195.27 l
1163.19 2198.84 l
1214.85 1750.32 l
1266.5 1107.58 l
1318.15 797.168 l
1369.81 924.262 l
1421.47 814.516 l
1473.13 925.23 l
1524.78 994.012 l
1576.44 995.672 l
1628.1 1007.9 l
1679.75 956.73 l
1731.41 913.836 l
1783.06 992.699 l
1834.71 998.633 l
1886.38 1002.23 l
1938.03 935.379 l
1989.69 921.945 l
2041.35 967.613 l
2093 959.984 l
2144.66 938.121 l
2196.31 988.164 l
2247.97 973.313 l
2299.63 970.516 l
2351.28 1036.79 l
2402.94 982.344 l
2454.59 965.453 l
2506.25 1096.09 l
2557.91 1128.89 l
2609.56 1039.81 l
2661.22 1150.57 l
2712.88 1212.09 l
2764.54 1224.82 l
2816.19 1130.08 l
2867.84 1074.11 l
2919.5 1095.73 l
2971.15 1083.27 l
3022.81 1130.7 l
3074.47 1169.42 l
3126.13 1197.08 l
3177.79 1071.28 l
3229.44 1170.92 l
3281.1 1049.86 l
3332.75 1001.65 l
3384.4 934.816 l
3436.06 955.531 l
3487.71 937.305 l
3539.38 931.336 l
3591.04 963.781 l
3642.69 975.988 l
3694.34 900.906 l
3746 881.934 l
3797.66 870.367 l
3849.31 825.48 l
3900.97 795.164 l
3952.63 815.52 l
4004.28 712.156 l
4055.94 707.469 l
4107.6 707.586 l
4159.25 757.027 l
4210.9 770.582 l
4262.56 745.531 l
4314.22 671.113 l
4365.88 688.598 l
4417.54 681.773 l
4469.19 796.492 l
4520.84 909.961 l
4572.5 884.324 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
end
%%Trailer
%%DocumentSuppliedResources:
%%+ font SGJTKY+Helvetica
%%EOF
